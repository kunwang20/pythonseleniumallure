{"name": "登录用例", "status": "broken", "statusDetails": {"message": "Exception: ('xpath', '//*[@id=\"app\"]/div[1]/form/div[1]/div/div[1]/input')定位失败，错误信息Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00636463+2188387]\n\tOrdinal0 [0x005CE461+1762401]\n\tOrdinal0 [0x004E3D78+802168]\n\tOrdinal0 [0x00511880+989312]\n\tOrdinal0 [0x00511B1B+989979]\n\tOrdinal0 [0x0053E912+1173778]\n\tOrdinal0 [0x0052C824+1099812]\n\tOrdinal0 [0x0053CC22+1166370]\n\tOrdinal0 [0x0052C5F6+1099254]\n\tOrdinal0 [0x00506BE0+945120]\n\tOrdinal0 [0x00507AD6+948950]\n\tGetHandleVerifier [0x008D71F2+2712546]\n\tGetHandleVerifier [0x008C886D+2652765]\n\tGetHandleVerifier [0x006C002A+520730]\n\tGetHandleVerifier [0x006BEE06+516086]\n\tOrdinal0 [0x005D468B+1787531]\n\tOrdinal0 [0x005D8E88+1805960]\n\tOrdinal0 [0x005D8F75+1806197]\n\tOrdinal0 [0x005E1DF1+1842673]\n\tBaseThreadInitThunk [0x76BFFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F27C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F27C3E+238]", "trace": "self = <loc_page.login_page.LoginPage object at 0x0000027A44A75E10>\nloc = ('xpath', '//*[@id=\"app\"]/div[1]/form/div[1]/div/div[1]/input')\ncondition = 'visibility', retry = 1\n\n    def find_element(self, loc, condition='visibility',retry=1):\n        \"\"\"\n    \n        :param loc:定位内容\n        :param condition: 默认visibility\n        :param retry:重试次数，我写的1\n        :return:\n        \"\"\"\n        for time in range(retry+1):\n            try:\n                logger.info(f\"当前定位：{loc}\")\n                if condition == 'visibility':\n>                   node = self.wait.until(EC.visibility_of_element_located(loc))\n\n..\\Base\\base_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4e13320bc0902b45179a50f81e5081fc\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000027A44A1F240>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00636463+2188387]\nE       \tOrdinal0 [0x005CE461+1762401]\nE       \tOrdinal0 [0x004E3D78+802168]\nE       \tOrdinal0 [0x00511880+989312]\nE       \tOrdinal0 [0x00511B1B+989979]\nE       \tOrdinal0 [0x0053E912+1173778]\nE       \tOrdinal0 [0x0052C824+1099812]\nE       \tOrdinal0 [0x0053CC22+1166370]\nE       \tOrdinal0 [0x0052C5F6+1099254]\nE       \tOrdinal0 [0x00506BE0+945120]\nE       \tOrdinal0 [0x00507AD6+948950]\nE       \tGetHandleVerifier [0x008D71F2+2712546]\nE       \tGetHandleVerifier [0x008C886D+2652765]\nE       \tGetHandleVerifier [0x006C002A+520730]\nE       \tGetHandleVerifier [0x006BEE06+516086]\nE       \tOrdinal0 [0x005D468B+1787531]\nE       \tOrdinal0 [0x005D8E88+1805960]\nE       \tOrdinal0 [0x005D8F75+1806197]\nE       \tOrdinal0 [0x005E1DF1+1842673]\nE       \tBaseThreadInitThunk [0x76BFFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27C3E+238]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_Login.Testlogin object at 0x0000027A444A2850>\ndriver_p = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4e13320bc0902b45179a50f81e5081fc\")>\ndata = {'expect': '登录用户：test11 不存在', 'passwd': 123456, 'username': 'test11'}\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('data', read_yaml()['login_test'])\n    @allure.title(\"登录用例\")\n    def test_login(self, driver_p, data):\n        username, passwd = data['username'], data['passwd']\n        page = LoginPage(driver_p)\n        with allure.step(\"输入账号\"):\n>           page.send_keys(LoginPage.username, username)\n\ntest_Login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Base\\base_page.py:49: in send_keys\n    node = self.find_element(loc)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <loc_page.login_page.LoginPage object at 0x0000027A44A75E10>\nloc = ('xpath', '//*[@id=\"app\"]/div[1]/form/div[1]/div/div[1]/input')\ncondition = 'visibility', retry = 1\n\n    def find_element(self, loc, condition='visibility',retry=1):\n        \"\"\"\n    \n        :param loc:定位内容\n        :param condition: 默认visibility\n        :param retry:重试次数，我写的1\n        :return:\n        \"\"\"\n        for time in range(retry+1):\n            try:\n                logger.info(f\"当前定位：{loc}\")\n                if condition == 'visibility':\n                    node = self.wait.until(EC.visibility_of_element_located(loc))\n                else:\n                    node = self.wait.until(EC.presence_of_element_located(loc))\n                return node\n            except Exception as e:\n                errno_info = f\"{loc}定位失败，错误信息{e}\"\n                logger.error(errno_info)\n                if time < retry:\n                    logger.info(f\"正在重新定位，当前重试次数：{time+1}\")\n                else:\n>                   raise Exception(errno_info)\nE                   Exception: ('xpath', '//*[@id=\"app\"]/div[1]/form/div[1]/div/div[1]/input')定位失败，错误信息Message: \nE                   Stacktrace:\nE                   Backtrace:\nE                   \tOrdinal0 [0x00636463+2188387]\nE                   \tOrdinal0 [0x005CE461+1762401]\nE                   \tOrdinal0 [0x004E3D78+802168]\nE                   \tOrdinal0 [0x00511880+989312]\nE                   \tOrdinal0 [0x00511B1B+989979]\nE                   \tOrdinal0 [0x0053E912+1173778]\nE                   \tOrdinal0 [0x0052C824+1099812]\nE                   \tOrdinal0 [0x0053CC22+1166370]\nE                   \tOrdinal0 [0x0052C5F6+1099254]\nE                   \tOrdinal0 [0x00506BE0+945120]\nE                   \tOrdinal0 [0x00507AD6+948950]\nE                   \tGetHandleVerifier [0x008D71F2+2712546]\nE                   \tGetHandleVerifier [0x008C886D+2652765]\nE                   \tGetHandleVerifier [0x006C002A+520730]\nE                   \tGetHandleVerifier [0x006BEE06+516086]\nE                   \tOrdinal0 [0x005D468B+1787531]\nE                   \tOrdinal0 [0x005D8E88+1805960]\nE                   \tOrdinal0 [0x005D8F75+1806197]\nE                   \tOrdinal0 [0x005E1DF1+1842673]\nE                   \tBaseThreadInitThunk [0x76BFFCC9+25]\nE                   \tRtlGetAppContainerNamedObjectPath [0x76F27C6E+286]\nE                   \tRtlGetAppContainerNamedObjectPath [0x76F27C3E+238]\n\n..\\Base\\base_page.py:40: Exception"}, "steps": [{"name": "输入账号", "status": "broken", "statusDetails": {"message": "Exception: ('xpath', '//*[@id=\"app\"]/div[1]/form/div[1]/div/div[1]/input')定位失败，错误信息Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00636463+2188387]\n\tOrdinal0 [0x005CE461+1762401]\n\tOrdinal0 [0x004E3D78+802168]\n\tOrdinal0 [0x00511880+989312]\n\tOrdinal0 [0x00511B1B+989979]\n\tOrdinal0 [0x0053E912+1173778]\n\tOrdinal0 [0x0052C824+1099812]\n\tOrdinal0 [0x0053CC22+1166370]\n\tOrdinal0 [0x0052C5F6+1099254]\n\tOrdinal0 [0x00506BE0+945120]\n\tOrdinal0 [0x00507AD6+948950]\n\tGetHandleVerifier [0x008D71F2+2712546]\n\tGetHandleVerifier [0x008C886D+2652765]\n\tGetHandleVerifier [0x006C002A+520730]\n\tGetHandleVerifier [0x006BEE06+516086]\n\tOrdinal0 [0x005D468B+1787531]\n\tOrdinal0 [0x005D8E88+1805960]\n\tOrdinal0 [0x005D8F75+1806197]\n\tOrdinal0 [0x005E1DF1+1842673]\n\tBaseThreadInitThunk [0x76BFFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F27C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F27C3E+238]\n\n", "trace": "  File \"C:\\Users\\zq\\Desktop\\学习\\pythonseleniumallure\\testcase\\test_Login.py\", line 20, in test_login\n    page.send_keys(LoginPage.username, username)\n  File \"C:\\Users\\zq\\Desktop\\学习\\pythonseleniumallure\\Base\\base_page.py\", line 49, in send_keys\n    node = self.find_element(loc)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\zq\\Desktop\\学习\\pythonseleniumallure\\Base\\base_page.py\", line 40, in find_element\n    raise Exception(errno_info)\n"}, "start": 1697508051091, "stop": 1697508072138}], "parameters": [{"name": "data", "value": "{'username': 'test11', 'passwd': 123456, 'expect': '登录用户：test11 不存在'}"}], "start": 1697508051089, "stop": 1697508072141, "uuid": "24a64b23-4b93-435f-abf1-0d069f4227db", "testCaseId": "92eaaa8f8716699aeb3547e9826c589b", "fullName": "testcase.test_Login.Testlogin#test_login"}